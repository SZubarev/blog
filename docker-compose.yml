# Use postgres/example user/password credentials
version: '3.4'

services:
  api:
    container_name: blog_api
    build:
      context: ./services/api-gw
      dockerfile: Dockerfile
    restart: always
    working_dir: /app/src
    volumes:
      - ./services/api-gw:/app/src
      - ./logs/api:/app/logs
    ports:
      - "8888:8888"
    environment:
      - APP_MODE=${APP_MODE}
      - PORT=${API_PORT}
      
      #Параметры подключения к микросервисам
      - USER_HOST=${USER_HOST}
      - USER_PORT=${USER_PORT}
      
      - POST_HOST=${POST_HOST}
      - POST_PORT=${POST_PORT}

      - CATEGORY_HOST=${CATEGORY_HOST}
      - CATEGORY_PORT=${CATEGORY_PORT}

      - COMMENT_HOST=${COMMENT_HOST}
      - COMMENT_PORT=${COMMENT_PORT}

  user:
    container_name: blog_user
    build:
      context: ./services/user
      dockerfile: Dockerfile
    restart: always
    working_dir: /app/src
    volumes:
      - ./services/user:/app/src
      - ./logs/user:/app/logs
    ports:
      - ${USER_PORT_LOCAL}:${USER_PORT}
    environment:
      - APP_MODE=${APP_MODE}
      - HOST=${USER_HOST}
      - PORT=${USER_PORT}
      - PORT_LOCAL=${USER_PORT_LOCAL}
      
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}

      - POST_HOST=${POST_HOST}
      - POST_PORT=${POST_PORT}

  post:
    container_name: blog_post
    build:
      context: ./services/post
      dockerfile: Dockerfile
    restart: always
    working_dir: /app/src
    volumes:
      - ./services/post:/app/src
      - ./logs/post:/app/logs
    ports:
      - ${POST_PORT_LOCAL}:${POST_PORT}
    environment:
      - APP_MODE=${APP_MODE}
      - HOST=${POST_HOST}
      - PORT=${POST_PORT}
      - PORT_LOCAL=${POST_PORT_LOCAL}
      
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}

      - USER_HOST=${USER_HOST}
      - USER_PORT=${USER_PORT}

      - CATEGORY_HOST=${CATEGORY_HOST}
      - CATEGORY_PORT=${CATEGORY_PORT}

      - COMMENT_HOST=${COMMENT_HOST}
      - COMMENT_PORT=${COMMENT_PORT}

  comment:
    container_name: blog_comment
    build:
      context: ./services/comment
      dockerfile: Dockerfile
    restart: always
    working_dir: /app/src
    volumes:
      - ./services/comment:/app/src
      - ./logs/comment:/app/logs
    ports:
      - ${COMMENT_PORT_LOCAL}:${COMMENT_PORT}
    environment:
      - APP_MODE=${APP_MODE}
      - HOST=${COMMENT_HOST}
      - PORT=${COMMENT_PORT}
      - PORT_LOCAL=${COMMENT_PORT_LOCAL}
      
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}
  
  category:
    container_name: blog_category
    build:
      context: ./services/category
      dockerfile: Dockerfile
    restart: always
    working_dir: /app/src
    volumes:
      - ./services/category:/app/src
      - ./logs/category:/app/logs
    ports:
      - ${CATEGORY_PORT_LOCAL}:${CATEGORY_PORT}
    environment:
      - APP_MODE=${APP_MODE}
      - HOST=${CATEGORY_HOST}
      - PORT=${CATEGORY_PORT}
      - PORT_LOCAL=${CATEGORY_PORT_LOCAL}
      
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASS}


  #NGINX
  web:
    container_name: blog_web
    build:
      context: ./web
      dockerfile: Dockerfile
    restart: always
    #environment:
      #- API_HOST=${API_HOST}
      #- API_PORT=${API_PORT}
    #working_dir: /web/src
    volumes:
      - ./web/frontend:/app
      - ./logs/web:/logs
      - ./web/config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
      - "443:443"
    #depends_on:
      #- api
  
  #MongoDb
  mongo:
    container_name: blog_mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: blog
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    volumes:
      - ./data/mongo:/data/db

  mongo-express:
    container_name: blog_mongo_express
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}